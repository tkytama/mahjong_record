.game-top
  .game-background
    .player.position_front
      .player-image
        = link_to room_player_path(params[:room_id], @player_front.id)
         - if @player_front.image.attached?
            = image_tag @player_front.image.variant(combine_options: {resize: "100^", gravity: "Center" ,crop: "100x100+0+0", auto_orient: true})
         - else
           = image_tag 'default_user.jpg', size: '100x100'
      p #{@player_front.name}
      p #{@game_records_now.find_by(user_id: @player_front.id).point}

    .left-and-right
      .player.position_left
        .player-image
          = link_to room_player_path(@player_left.room_id, @player_left.id)
            - if @player_left.image.attached?
              = image_tag @player_left.image.variant(combine_options: {resize: "100^", gravity: "Center" ,crop: "100x100+0+0", auto_orient: true})
            - else
              = image_tag 'default_user.jpg', size: '100x100'
        p #{@player_left.name}
        p #{@game_records_now.find_by(user_id: @player_left.id).point}

      .player.position_right
        .player-image
          = link_to room_player_path(@player_right.room_id, @player_right.id)
            - if @player_right.image.attached?
              = image_tag @player_right.image.variant(combine_options: {resize: "100^", gravity: "Center" ,crop: "100x100+0+0", auto_orient: true}) 
            - else
              = image_tag 'default_user.jpg', size: '100x100'
        p #{@player_right.name}
        p #{@game_records_now.find_by(user_id: @player_right.id).point}

    .player.position_mine
      .player-image
        = link_to room_player_path(@player_mine.room_id, @player_mine.id)
          - if @player_mine.image.attached?
            = image_tag @player_mine.image.variant(combine_options: {resize: "100^", gravity: "Center" ,crop: "100x100+0+0", auto_orient: true}) 
          - else
            = image_tag 'default_user.jpg', size: '100x100'
      p #{@player_mine.name}
      p #{@game_records_now.find_by(user_id: @player_mine.id).point}

.border-line

.average-result
  .score-info
    = link_to '起家',game_records_room_path(params[:room_id]) 
    p #{@game_records_now.find_by(user_id: @player_mine.id).seat}
  .vertical-line
  .score-info
    = link_to '得点',game_records_room_path(params[:room_id]) 
    p #{@game_records_now.find_by(user_id: @player_mine.id).point}
  .vertical-line
  .score-info
    = link_to 'ルール',edit_room_path(params[:room_id]) 
    - if @room.kuitan == true && @room.atoduke == true
      p ありあり
    - elsif @room.kuitan == true && @room.atoduke == false
      p ありなし
    - elsif @room.kuitan == false && @room.atoduke == true
      p なしあり
    - else
      p なしなし

.contents-wrapper
  p.term-result これまでの対局結果



  table border="1" 
    tr 
      td 局番号 
      td #{@player_mine.name}
      td #{@player_front.name}
      td #{@player_left.name}
      td #{@player_right.name}
    - game_number = 1
    - (@count - 1).times do
      tr
        td #{game_number} 
        td #{@game_records.where(count: game_number).find_by(user_id: @player_mine.id).point}
        td #{@game_records.where(count: game_number).find_by(user_id: @player_front.id).point}
        td #{@game_records.where(count: game_number).find_by(user_id: @player_left.id).point}
        td #{@game_records.where(count: game_number).find_by(user_id: @player_right.id).point} 
        td = link_to '修正', confirm_tobi_yakitori_room_game_path(count: game_number), class: 'white-button game-record'
      - game_number += 1

.game-room-buttons
    p = link_to '終了する', room_logout_index_path, class: 'silver-button exit-room'
    p = link_to '局目の集計', new_enter_room_path, class: 'white-button game-record'
    p = link_to '次の局へ', confirm_tobi_yakitori_room_game_path(count: @count), class: 'white-button game-record'
